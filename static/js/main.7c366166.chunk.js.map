{"version":3,"sources":["logo.svg","lookup/components.js","tweets/lookup.js","tweets/buttons.js","tweets/create.js","profiles/components.js","tweets/detail.js","tweets/feed.js","tweets/list.js","tweets/components.js","App.js","serviceWorker.js","index.js"],"names":["backendLookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","responseType","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","open","setRequestHeader","onload","status","response","detail","window","location","href","indexOf","onerror","e","message","send","apiTweetFeed","nextUrl","undefined","replace","apiTweetList","username","ActionBtn","props","tweet","action","didPerformAction","likes","className","actionDisplay","display","handleActionBackendEvent","console","log","type","onClick","event","preventDefault","tweetId","id","apiTweetAction","TweetCreate","textAreaRef","React","createRef","didTweet","handleBackendUpdate","alert","onSubmit","newVal","current","value","content","ref","required","UserLink","children","UserDisplay","user","nameDisplay","includeFullName","first_name","last_name","Fragment","UserPicture","ParentTweet","parent","Tweet","isRetweet","retweeter","hideActions","didRetweet","useState","actionTweet","setActionTweet","match","pathname","urlTweetId","groups","tweetid","isDetail","handlePerformAction","newActionTweet","FeedList","tweetsInit","setTweetsInit","tweets","setTweets","setNextUrl","tweetsDidSet","setTweetsDidSet","useEffect","final","newTweets","concat","next","results","handleDidRetweet","newTweet","updateTweetsInit","unshift","updateFinalTweets","map","item","index","TweetsList","TweetsComponent","setNewTweets","canTweet","tempNewTweets","TweetDetailComponent","didLookup","setDidLookup","setTweet","handleBackendLookup","apiTweetDetail","App","src","logo","alt","target","rel","Boolean","hostname","appEl","getElementById","ReactDOM","render","createElement","tweetsEl","dataset","tweetFeedEl","querySelectorAll","forEach","container","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7c366166.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","function getCookie(name) {\r\n  var cookieValue = null;\r\n  if (document.cookie && document.cookie !== \"\") {\r\n    var cookies = document.cookie.split(\";\");\r\n    for (var i = 0; i < cookies.length; i++) {\r\n      var cookie = cookies[i].trim();\r\n      // Does this cookie string begin with the name we want?\r\n      if (cookie.substring(0, name.length + 1) === name + \"=\") {\r\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return cookieValue;\r\n}\r\n\r\nexport function backendLookup(method, endpoint, callback, data) {\r\n  let jsonData;\r\n  if (data) {\r\n    jsonData = JSON.stringify(data);\r\n  }\r\n  const xhr = new XMLHttpRequest();\r\n  const url = `http://localhost:8000/api${endpoint}`;\r\n  xhr.responseType = \"json\";\r\n  const csrftoken = getCookie(\"csrftoken\");\r\n  xhr.open(method, url);\r\n  xhr.setRequestHeader(\"Content-Type\", \"application/json\");\r\n\r\n  if (csrftoken) {\r\n    // xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\", \"XMLHttpRequest\")\r\n    xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\r\n    xhr.setRequestHeader(\"X-CSRFToken\", csrftoken);\r\n  }\r\n\r\n  xhr.onload = function () {\r\n    if (xhr.status === 403) {\r\n      const detail = xhr.response.detail;\r\n      if (detail === \"Authentication credentials were not provided.\") {\r\n        if (window.location.href.indexOf(\"login\") === -1) {\r\n          window.location.href = \"/login?showLoginRequired=true\";\r\n        }\r\n      }\r\n    }\r\n    callback(xhr.response, xhr.status);\r\n  };\r\n  xhr.onerror = function (e) {\r\n    callback({ message: \"The request was an error\" }, 400);\r\n  };\r\n  xhr.send(jsonData);\r\n}\r\n","import { backendLookup } from \"../lookup\";\r\n\r\nexport function apiTweetCreate(newTweet, callback) {\r\n  backendLookup(\"POST\", \"/tweets/create/\", callback, { content: newTweet });\r\n}\r\n\r\nexport function apiTweetAction(tweetId, action, callback) {\r\n  const data = { id: tweetId, action: action };\r\n  backendLookup(\"POST\", \"/tweets/action/\", callback, data);\r\n}\r\n\r\nexport function apiTweetDetail(tweetId, callback) {\r\n  backendLookup(\"GET\", `/tweets/${tweetId}/`, callback);\r\n}\r\n\r\nexport function apiTweetFeed(callback, nextUrl) {\r\n  let endpoint = \"/tweets/feed/\";\r\n  if (nextUrl !== null && nextUrl !== undefined) {\r\n    endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\");\r\n  }\r\n  backendLookup(\"GET\", endpoint, callback);\r\n}\r\n\r\nexport function apiTweetList(username, callback, nextUrl) {\r\n  let endpoint = \"/tweets/\";\r\n  if (username) {\r\n    endpoint = `/tweets/?username=${username}`;\r\n  }\r\n  if (nextUrl !== null && nextUrl !== undefined) {\r\n    endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\");\r\n  }\r\n  backendLookup(\"GET\", endpoint, callback);\r\n}\r\n","import React from \"react\";\r\n\r\nimport { apiTweetAction} from \"./lookup\";\r\n\r\n\r\nexport function ActionBtn(props) {\r\n  const { tweet, action, didPerformAction } = props;\r\n  const likes = tweet.likes ? tweet.likes : 0;\r\n  const className = props.className\r\n    ? props.className\r\n    : \"btn btn-primary btn-sm\";\r\n  const actionDisplay = action.display ? action.display : \"Action\";\r\n\r\n  const handleActionBackendEvent = (response, status) => {\r\n    console.log(response, status);\r\n    if ((status === 200 || status === 201) && didPerformAction) {\r\n      didPerformAction(response, status);\r\n    }\r\n  };\r\n  const handleClick = (event) => {\r\n    event.preventDefault();\r\n    apiTweetAction(tweet.id, action.type, handleActionBackendEvent);\r\n  };\r\n  const display =\r\n    action.type === \"like\" ? `${likes} ${actionDisplay}` : actionDisplay;\r\n  return (\r\n    <button className={className} onClick={handleClick}>\r\n      {display}\r\n    </button>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { apiTweetCreate } from \"./lookup\";\r\n\r\nexport function TweetCreate(props) {\r\n  const textAreaRef = React.createRef();\r\n  const { didTweet } = props;\r\n  const handleBackendUpdate = (response, status) => {\r\n    if (status === 201) {\r\n      didTweet(response);\r\n    } else {\r\n      console.log(response);\r\n      alert(\"An error occured please try again\");\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const newVal = textAreaRef.current.value;\r\n    // backend api request\r\n    apiTweetCreate(newVal, handleBackendUpdate);\r\n    textAreaRef.current.value = \"\";\r\n  };\r\n  return (\r\n    <div className={props.className}>\r\n      <form onSubmit={handleSubmit}>\r\n        <textarea\r\n          ref={textAreaRef}\r\n          required={true}\r\n          className=\"form-control\"\r\n          name=\"tweet\"\r\n        ></textarea>\r\n        <button type=\"submit\" className=\"btn btn-primary my-3\">\r\n          Tweet\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport function UserLink(props) {\r\n  const { username } = props;\r\n  const handleUserLink = (event) => {\r\n    window.location.href = `/profiles/${username}`;\r\n  };\r\n  return (\r\n    <span className=\"pointer\" onClick={handleUserLink}>\r\n      {props.children}\r\n    </span>\r\n  );\r\n}\r\n\r\nexport function UserDisplay(props) {\r\n  const { user, includeFullName } = props;\r\n  const nameDisplay =\r\n    includeFullName === true ? `${user.first_name} ${user.last_name} ` : null;\r\n  return (\r\n    <React.Fragment>\r\n      {nameDisplay}\r\n      <UserLink username={user.username}>@{user.username}</UserLink>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport function UserPicture(props) {\r\n  const { user } = props;\r\n  return (\r\n    <UserLink username={user.username}>\r\n      <span className=\"mx-1 px-3 py-2 rounded-circle bg-dark text-white\">\r\n        {user.username[0]}\r\n      </span>\r\n    </UserLink>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nimport { ActionBtn } from \"./buttons\";\r\n\r\nimport { UserDisplay, UserPicture } from \"../profiles\";\r\n\r\nexport function ParentTweet(props) {\r\n  const { tweet } = props;\r\n  return tweet.parent ? (\r\n    <Tweet\r\n      isRetweet\r\n      retweeter={props.retweeter}\r\n      hideActions\r\n      className={\" \"}\r\n      tweet={tweet.parent}\r\n    />\r\n  ) : null;\r\n}\r\nexport function Tweet(props) {\r\n  const { tweet, didRetweet, hideActions, isRetweet, retweeter } = props;\r\n  const [actionTweet, setActionTweet] = useState(\r\n    props.tweet ? props.tweet : null\r\n  );\r\n  let className = props.className ? props.className : \"col-10 mx-auto col-md-6\";\r\n  className =\r\n    isRetweet === true ? `${className} p-2 border rounded` : className;\r\n  const path = window.location.pathname;\r\n  const match = path.match(/(?<tweetid>\\d+)/);\r\n  const urlTweetId = match ? match.groups.tweetid : -1;\r\n  const isDetail = `${tweet.id}` === `${urlTweetId}`;\r\n\r\n  const handleLink = (event) => {\r\n    event.preventDefault();\r\n    window.location.href = `/${tweet.id}`;\r\n  };\r\n  const handlePerformAction = (newActionTweet, status) => {\r\n    if (status === 200) {\r\n      setActionTweet(newActionTweet);\r\n    } else if (status === 201) {\r\n      if (didRetweet) {\r\n        didRetweet(newActionTweet);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={className}>\r\n      {isRetweet === true && (\r\n        <div className=\"mb-2\">\r\n          <span className=\"small text-muted\">\r\n            Retweet via <UserDisplay user={retweeter} />\r\n          </span>\r\n        </div>\r\n      )}\r\n      <div className=\"d-flex\">\r\n        <div className=\"\">\r\n          <UserPicture user={tweet.user} />\r\n        </div>\r\n        <div className=\"col-11\">\r\n          <div>\r\n            <p>\r\n              <UserDisplay includeFullName user={tweet.user} />\r\n            </p>\r\n            <p>{tweet.content}</p>\r\n\r\n            <ParentTweet tweet={tweet} retweeter={tweet.user} />\r\n          </div>\r\n          <div className=\"btn btn-group px-0\">\r\n            {actionTweet && hideActions !== true && (\r\n              <React.Fragment>\r\n                <ActionBtn\r\n                  tweet={actionTweet}\r\n                  didPerformAction={handlePerformAction}\r\n                  action={{ type: \"like\", display: \"Likes\" }}\r\n                />\r\n                <ActionBtn\r\n                  tweet={actionTweet}\r\n                  didPerformAction={handlePerformAction}\r\n                  action={{ type: \"unlike\", display: \"Unlike\" }}\r\n                />\r\n                <ActionBtn\r\n                  tweet={actionTweet}\r\n                  didPerformAction={handlePerformAction}\r\n                  action={{ type: \"retweet\", display: \"Retweet\" }}\r\n                />\r\n              </React.Fragment>\r\n            )}\r\n            {isDetail === true ? null : (\r\n              <button\r\n                className=\"btn btn-outline-primary btn-sm\"\r\n                onClick={handleLink}\r\n              >\r\n                View\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { apiTweetFeed } from \"./lookup\";\r\n\r\nimport { Tweet } from \"./detail\";\r\n\r\nexport function FeedList(props) {\r\n  const [tweetsInit, setTweetsInit] = useState([]);\r\n  const [tweets, setTweets] = useState([]);\r\n  const [nextUrl, setNextUrl] = useState(null);\r\n  const [tweetsDidSet, setTweetsDidSet] = useState(false);\r\n  useEffect(() => {\r\n    const final = [...props.newTweets].concat(tweetsInit);\r\n    if (final.length !== tweets.length) {\r\n      setTweets(final);\r\n    }\r\n  }, [props.newTweets, tweets, tweetsInit]);\r\n\r\n  useEffect(() => {\r\n    if (tweetsDidSet === false) {\r\n      const handleTweetListLookup = (response, status) => {\r\n        if (status === 200) {\r\n          setNextUrl(response.next);\r\n          setTweetsInit(response.results);\r\n          setTweetsDidSet(true);\r\n        }\r\n      };\r\n      apiTweetFeed(handleTweetListLookup);\r\n    }\r\n  }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username]);\r\n\r\n  const handleDidRetweet = (newTweet) => {\r\n    const updateTweetsInit = [...tweetsInit];\r\n    updateTweetsInit.unshift(newTweet);\r\n    setTweetsInit(updateTweetsInit);\r\n    const updateFinalTweets = [...tweets];\r\n    updateFinalTweets.unshift(tweets);\r\n    setTweets(updateFinalTweets);\r\n  };\r\n  const handleLoadNext = (event) => {\r\n    event.preventDefault();\r\n    if (nextUrl !== null) {\r\n      const handleLoadNextResponse = (response, status) => {\r\n        if (status === 200) {\r\n          setNextUrl(response.next);\r\n          const newTweets = [...tweets].concat(response.results);\r\n          setTweetsInit(newTweets);\r\n          setTweets(newTweets);\r\n        }\r\n      };\r\n      apiTweetFeed(handleLoadNextResponse, nextUrl);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {tweets.map((item, index) => {\r\n        return (\r\n          <Tweet\r\n            tweet={item}\r\n            didRetweet={handleDidRetweet}\r\n            className=\"my-5 py-5 border bg-white text-dark\"\r\n            key={`${index}-{item.id}`}\r\n          />\r\n        );\r\n      })}\r\n      {nextUrl !== null && (\r\n        <button onClick={handleLoadNext} className=\"btn btn-outline-primary\">\r\n          Load next\r\n        </button>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { apiTweetList } from \"./lookup\";\r\n\r\nimport { Tweet } from \"./detail\";\r\n\r\nexport function TweetsList(props) {\r\n  const [tweetsInit, setTweetsInit] = useState([]);\r\n  const [tweets, setTweets] = useState([]);\r\n  const [nextUrl, setNextUrl] = useState(null);\r\n  const [tweetsDidSet, setTweetsDidSet] = useState(false);\r\n  useEffect(() => {\r\n    const final = [...props.newTweets].concat(tweetsInit);\r\n    if (final.length !== tweets.length) {\r\n      setTweets(final);\r\n    }\r\n  }, [props.newTweets, tweets, tweetsInit]);\r\n\r\n  useEffect(() => {\r\n    if (tweetsDidSet === false) {\r\n      const handleTweetListLookup = (response, status) => {\r\n        if (status === 200) {\r\n          setNextUrl(response.next);\r\n          setTweetsInit(response.results);\r\n          setTweetsDidSet(true);\r\n        } else {\r\n          alert(\"There was an error\");\r\n        }\r\n      };\r\n      apiTweetList(props.username, handleTweetListLookup);\r\n    }\r\n  }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username]);\r\n\r\n  const handleDidRetweet = (newTweet) => {\r\n    const updateTweetsInit = [...tweetsInit];\r\n    updateTweetsInit.unshift(newTweet);\r\n    setTweetsInit(updateTweetsInit);\r\n    const updateFinalTweets = [...tweets];\r\n    updateFinalTweets.unshift(tweets);\r\n    setTweets(updateFinalTweets);\r\n  };\r\n  const handleLoadNext = (event) => {\r\n    event.preventDefault();\r\n    if (nextUrl !== null) {\r\n      const handleLoadNextResponse = (response, status) => {\r\n        if (status === 200) {\r\n          setNextUrl(response.next);\r\n          const newTweets = [...tweets].concat(response.results);\r\n          setTweetsInit(newTweets);\r\n          setTweets(newTweets);\r\n        } else {\r\n          alert(\"There was an error\");\r\n        }\r\n      };\r\n      apiTweetList(props.username, handleLoadNextResponse, nextUrl);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {tweets.map((item, index) => {\r\n        return (\r\n          <Tweet\r\n            tweet={item}\r\n            didRetweet={handleDidRetweet}\r\n            className=\"my-5 py-5 border bg-white text-dark\"\r\n            key={`${index}-{item.id}`}\r\n          />\r\n        );\r\n      })}\r\n      {nextUrl !== null && (\r\n        <button onClick={handleLoadNext} className=\"btn btn-outline-primary\">\r\n          Load next\r\n        </button>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { TweetCreate } from \"./create\";\r\nimport { Tweet } from \"./detail\";\r\nimport { apiTweetDetail } from \"./lookup\";\r\nimport { FeedList } from \"./feed\";\r\nimport { TweetsList } from \"./list\";\r\n\r\nexport function FeedComponent(props) {\r\n  const [newTweets, setNewTweets] = useState([]);\r\n  const canTweet = props.canTweet === \"false\" ? false : true;\r\n  const handleNewTweet = (newTweet) => {\r\n    let tempNewTweets = [...newTweets];\r\n    tempNewTweets.unshift(newTweet);\r\n    setNewTweets(tempNewTweets);\r\n  };\r\n  return (\r\n    <div className={props.className}>\r\n      {canTweet === true && (\r\n        <TweetCreate didTweet={handleNewTweet} className=\"col-12 mb-3\" />\r\n      )}\r\n      <FeedList newTweets={newTweets} {...props} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function TweetsComponent(props) {\r\n  const [newTweets, setNewTweets] = useState([]);\r\n  const canTweet = props.canTweet === \"false\" ? false : true;\r\n  const handleNewTweet = (newTweet) => {\r\n    let tempNewTweets = [...newTweets];\r\n    tempNewTweets.unshift(newTweet);\r\n    setNewTweets(tempNewTweets);\r\n  };\r\n  return (\r\n    <div className={props.className}>\r\n      {canTweet === true && (\r\n        <TweetCreate didTweet={handleNewTweet} className=\"col-12 mb-3\" />\r\n      )}\r\n      <TweetsList newTweets={newTweets} {...props} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function TweetDetailComponent(props) {\r\n  const { tweetId } = props;\r\n  const [didLookup, setDidLookup] = useState(false);\r\n  const [tweet, setTweet] = useState(null);\r\n\r\n  const handleBackendLookup = (response, status) => {\r\n    if (status === 200) {\r\n      setTweet(response);\r\n    } else {\r\n      alert(\"There was an error finding your tweet.\");\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (didLookup === false) {\r\n      apiTweetDetail(tweetId, handleBackendLookup);\r\n      setDidLookup(true);\r\n    }\r\n  }, [tweetId, didLookup, setDidLookup]);\r\n\r\n  return tweet === null ? null : (\r\n    <Tweet tweet={tweet} className={props.className} />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\n\r\nimport { TweetsComponent } from \"./tweets\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p>\r\n          Edit <code>src/App.js</code> and save to reload.\r\n        </p>\r\n        <div>\r\n          <TweetsComponent />\r\n        </div>\r\n        <a\r\n          className=\"App-link\"\r\n          href=\"https://reactjs.org\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Learn React\r\n        </a>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { \"Service-Worker\": \"script\" },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { FeedComponent, TweetsComponent, TweetDetailComponent } from \"./tweets\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nconst appEl = document.getElementById(\"root\");\r\nif (appEl) {\r\n  ReactDOM.render(<App />, appEl);\r\n}\r\nconst e = React.createElement;\r\nconst tweetsEl = document.getElementById(\"tweetme-2\");\r\nif (tweetsEl) {\r\n  ReactDOM.render(e(TweetsComponent, tweetsEl.dataset), tweetsEl);\r\n}\r\n\r\nconst tweetFeedEl = document.getElementById(\"tweetme-2-feed\");\r\nif (tweetFeedEl) {\r\n  ReactDOM.render(e(FeedComponent, tweetFeedEl.dataset), tweetFeedEl);\r\n}\r\n\r\nconst tweetDetailElements = document.querySelectorAll(\".tweetme-2-detail\");\r\n\r\ntweetDetailElements.forEach((container) => {\r\n  ReactDOM.render(e(TweetDetailComponent, container.dataset), container);\r\n});\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}